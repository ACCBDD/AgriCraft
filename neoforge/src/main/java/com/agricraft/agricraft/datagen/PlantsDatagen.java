package com.agricraft.agricraft.datagen;

import com.agricraft.agricraft.api.AgriApi;
import com.agricraft.agricraft.api.codecs.AgriFluidCondition;
import com.agricraft.agricraft.api.codecs.AgriProduct;
import com.agricraft.agricraft.api.codecs.AgriRequirement;
import com.agricraft.agricraft.api.codecs.AgriSeed;
import com.agricraft.agricraft.api.plant.AgriPlant;
import net.minecraft.data.worldgen.BootstapContext;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;

import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Acidity.HIGHLY_ACIDIC;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Acidity.HIGHLY_ALKALINE;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Acidity.NEUTRAL;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Acidity.SLIGHTLY_ACIDIC;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Humidity.ARID;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Humidity.DAMP;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Humidity.WATERY;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Humidity.WET;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Nutrients.HIGH;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Nutrients.LOW;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Nutrients.MEDIUM;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Nutrients.VERY_HIGH;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Type.EQUAL;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Type.EQUAL_OR_HIGHER;
import static com.agricraft.agricraft.api.codecs.AgriSoilCondition.Type.EQUAL_OR_LOWER;
import static com.agricraft.agricraft.api.requirement.AgriSeason.AUTUMN;
import static com.agricraft.agricraft.api.requirement.AgriSeason.SPRING;
import static com.agricraft.agricraft.api.requirement.AgriSeason.SUMMER;
import static com.agricraft.agricraft.api.requirement.AgriSeason.WINTER;

public class PlantsDatagen {

	public static void registerPlants(BootstapContext<AgriPlant> context) {
		mc(context, "allium", new AgriPlant.Builder()
				.seeds()  // AgriSeed.builder().chances(0.0, 1.0, 0.0).build()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:magenta_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:allium").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "azure_bluet", new AgriPlant.Builder()
				.stages(2, 3, 5, 6, 8, 9, 11, 12)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:light_gray_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:azure_bluet").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "bamboo", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:bamboo").chances(0.0, 1.0, 0.0).build())
				.stages(3, 6, 9, 12, 15, 18, 21, 24)
				.chances(0.9, 0.01, 0.1)
				.products(AgriProduct.builder().item("minecraft:bamboo").count(1, 2, 1000.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.4)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.4)
						.nutrients(MEDIUM, EQUAL_OR_HIGHER, 0.4)
						.light(10, 16, 0.5)
						.seasons(SPRING, SUMMER)
						.build())
				.build());
		mc(context, "beetroot", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:beetroot_seeds").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:beetroot").count(1, 3, 0.95).build())
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(AUTUMN)
						.build())
				.build());
		mc(context, "blue_orchid", new AgriPlant.Builder()
				.stages(2, 3, 5, 6, 8, 9, 11, 12)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:light_blue_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:blue_orchid").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "brown_mushroom", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:brown_mushroom").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:brown_mushroom").count(2, 5, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.15)
						.acidity(NEUTRAL, EQUAL, 0.2)
						.nutrients(MEDIUM, EQUAL_OR_LOWER, 0.2)
						.light(0, 10, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.build())
				.build());
		mc(context, "cactus", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:cactus").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:cactus").count(1, 3, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(ARID, EQUAL, 0.34)
						.acidity(NEUTRAL, EQUAL, 0.2)
						.nutrients(LOW, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SUMMER)
						.build())
				.build());
		mc(context, "carrot", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:carrot").chances(0.0, 1.0, 0.0).build())
				.stages(2, 3, 4, 5, 6, 7, 8, 9)
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:carrot").count(1, 4, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SPRING, AUTUMN)
						.build())
				.build());
		mc(context, "cornflower", new AgriPlant.Builder()
				.stages(2, 3, 5, 6, 8, 9, 11, 12)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:blue_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:cornflower").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "crimson_fungus", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:crimson_fungus").chances(0.0, 1.0, 0.0).build())
				.stages(2, 3, 5, 6, 8, 9, 11, 12)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:crimson_fungus").count(2, 5, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(ARID, EQUAL, 0.15)
						.acidity(HIGHLY_ACIDIC, EQUAL, 0.2)
						.nutrients(LOW, EQUAL_OR_LOWER, 0.1)
						.light(0, 10, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.build())
				.build());
		mc(context, "dandelion", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:yellow_dye").count(1, 1, 0.5).build())
				.clips(AgriProduct.builder().item("minecraft:dandelion").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "kelp", new AgriPlant.Builder()
				.seeds()
				.stages(6, 6, 12, 12, 12, 18, 18, 24)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:kelp").count(1, 1, 0.75).build())
				.requirement(AgriRequirement.builder()
						.humidity(WATERY, EQUAL_OR_HIGHER, 0.4)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(MEDIUM, EQUAL_OR_HIGHER, 0.1)
						.light(5, 16, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.fluid(AgriFluidCondition.builder().fluid("minecraft:water").build())
						.build())
				.build());
		mc(context, "lily_of_the_valley", new AgriPlant.Builder()
				.stages(2, 3, 5, 6, 8, 9, 11, 12)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:white_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:lily_of_the_valley").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "melon", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:melon_seeds").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:melon").count(3, 5, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.build())
				.build());
		mc(context, "nether_wart", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:nether_wart").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:nether_wart").count(1, 3, 0.95).build())
				.requirement(AgriRequirement.builder()
						.humidity(ARID, EQUAL, 0.15)
						.acidity(NEUTRAL, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.build())
				.build());
		mc(context, "orange_tulip", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:orange_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:orange_tulip").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "oxeye_daisy", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:light_gray_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:oxeye_daisy").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "pink_tulip", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:pink_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:pink_tulip").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "poppy", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:red_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:poppy").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "potato", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:potato").chances(0.0, 1.0, 0.0).build())
				.stages(2, 3, 4, 5, 6, 7, 8, 9)
				.chances(0.75, 0.025, 0.1)
				.products(
						AgriProduct.builder().item("minecraft:potato").count(1, 4, 0.95).build(),
						AgriProduct.builder().item("minecraft:poisonous_potato").count(1, 2, 0.02).build()
				)
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "pumpkin", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:pumpkin_seeds").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:pumpkin").count(1, 2, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SUMMER, AUTUMN)
						.build())
				.build());
		mc(context, "red_mushroom", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:red_mushroom").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:red_mushroom").count(2, 4, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.15)
						.acidity(NEUTRAL, EQUAL, 0.2)
						.nutrients(MEDIUM, EQUAL_OR_LOWER, 0.2)
						.light(0, 10, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.build())
				.build());
		mc(context, "red_tulip", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:red_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:red_tulip").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "seagrass", new AgriPlant.Builder()
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:seagrass").count(1, 1, 0.75).build())
				.requirement(AgriRequirement.builder()
						.humidity(WATERY, EQUAL_OR_HIGHER, 0.4)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(MEDIUM, EQUAL_OR_HIGHER, 0.1)
						.light(5, 16, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.fluid(AgriFluidCondition.builder().fluid("minecraft:water").build())
						.build())
				.build());
		mc(context, "sea_pickle", new AgriPlant.Builder()
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:sea_pickle").count(1, 1, 0.75).build())
				.requirement(AgriRequirement.builder()
						.humidity(WATERY, EQUAL_OR_HIGHER, 0.4)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(MEDIUM, EQUAL_OR_HIGHER, 0.1)
						.light(0, 16, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.fluid(AgriFluidCondition.builder().fluid("minecraft:water").build())
						.build())
				.build());
		mc(context, "sugar_cane", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:sugar_cane").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:sugar_cane").count(1, 2, 1000.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SUMMER)
						.build())
				.build());
		mc(context, "sweet_berries", new AgriPlant.Builder()
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:sweet_berries").count(1, 1, 0.75).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(MEDIUM, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN)
						.build())
				.build());
		mc(context, "warped_fungus", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:warped_fungus").chances(0.0, 1.0, 0.0).build())
				.stages(2, 3, 5, 6, 8, 9, 11, 12)
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:warped_fungus").count(2, 5, 1.0).build())
				.requirement(AgriRequirement.builder()
						.humidity(ARID, EQUAL, 0.15)
						.acidity(HIGHLY_ALKALINE, EQUAL, 0.2)
						.nutrients(LOW, EQUAL_OR_LOWER, 0.1)
						.light(0, 10, 0.5)
						.seasons(SPRING, SUMMER, AUTUMN, WINTER)
						.build())
				.build());
		mc(context, "wheat", new AgriPlant.Builder()
				.seeds(AgriSeed.builder().item("minecraft:wheat_seeds").chances(0.0, 1.0, 0.0).build())
				.stages16()
				.chances(0.75, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:wheat").count(1, 3, 0.95).build())
				.requirement(AgriRequirement.builder()
						.humidity(WET, EQUAL, 0.15)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(HIGH, EQUAL_OR_HIGHER, 0.1)
						.light(10, 16, 0.5)
						.seasons(SUMMER, AUTUMN)
						.build())
				.build());
		mc(context, "white_tulip", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:light_gray_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:white_tulip").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());
		mc(context, "wither_rose", new AgriPlant.Builder()
				.stages16()
				.chances(0.65, 0.025, 0.1)
				.products(AgriProduct.builder().item("minecraft:black_dye").count(1, 1, 0.75).build())
				.clips(AgriProduct.builder().item("minecraft:wither_rose").count(0, 1, 0.5).build())
				.requirement(AgriRequirement.builder()
						.humidity(DAMP, EQUAL, 0.2)
						.acidity(SLIGHTLY_ACIDIC, EQUAL, 0.2)
						.nutrients(VERY_HIGH, EQUAL_OR_HIGHER, 0.2)
						.light(10, 16, 0.5)
						.seasons(SPRING)
						.build())
				.build());

	}

	private static void mc(BootstapContext<AgriPlant> context, String plantId, AgriPlant plant) {
		context.register(
				ResourceKey.create(AgriApi.AGRIPLANTS, new ResourceLocation("minecraft", plantId)),
				plant
		);
	}
}
